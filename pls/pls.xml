<tool id="mixomics_pls" name="PLS" version="0.4">
  
  <description>PLS ans Sparse PLS with mixOmics </description>
  
  <requirements>
      <requirement type="package" version="6.1.1">r-mixomics</requirement>
	    <requirement type="package" version="1.1_4">r-batch</requirement>
  </requirements>
    
  <stdio>
      <exit_code range="1:" level="fatal" />
  </stdio>
  
  <command interpreter="Rscript">mixOmics_pls.r
    $inputX
    $inputY
    <!-- TODO: Composite datatype -->
    $loadingVectorsX
    $loadingVectorsY
    $latentVariablesX
    $latentVariablesY
    $resultRData
    $ncomp
    $sPLS_option.mode
    $sPLS_option.sparse
    #if $sPLS_option.sparse
      $sPLS_option.keepX.replace(",", " ")
      $sPLS_option.keepY.replace(",", " ")
    #end if
  </command>
  <inputs>
    <param name="inputX" type="data" label="Input File (X)" format="tabular"/>
    <param name="inputY" type="data" label="Input File (Y)" format="tabular"/>
    <param name="ncomp" type="integer" label="Number of components" min="0" max="10" value="3"/>
    <conditional name="sPLS_option">
      <param name="sparse" type="boolean" label="Sparse PLS"/>
      <when value="true">
        <param name="mode" type="select" label="Mode of computation">
          <option value="regression" select="True">Regression</option>
          <option value="canonical">Canonical</option>
        </param> 
        <param name="keepX" type="text" label="How many variables to keep on each dimension for X"
             help="(e.g. 50 50 50) Separate values with a space"/>
        <param name="keepY" type="text" label="How many variables to keep on each dimension for Y"
             help="(e.g. 10 10 10) Separate values with a space"/>
      </when>
      <when value="false">
        <param name="mode" type="select" label="Mode of computation">
          <option value="regression" select="True">Regression</option>
          <option value="canonical">Canonical</option>
          <option value="invariant">Invariant</option>
          <option value="classic">Classic</option>
        </param>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data name="loadingVectorsX" format="csv" label="${tool.name} on ${on_string} (X loading vectors)"/>
    <data name="loadingVectorsY" format="csv" label="${tool.name} on ${on_string} (Y loading vectors)"/>
    <data name="latentVariablesX" format="csv" label="${tool.name} on ${on_string} (X latent variables)"/>
    <data name="latentVariablesY" format="csv" label="${tool.name} on ${on_string} (Y latent variables)"/>
    <data name="resultRData" format="data" label="${tool.name} on ${on_string} (R data object)"/>
  </outputs>

  <help>
 
mixOmics R package

===========
Description
===========

This tool uses the mixOmics R package to perform Partial Least Squares (PLS) analysis. PLS is a multivariate projection-based method that can address many types of problems. It is extremely efficient when p + q >> n . As it performs local regression, PLS does not encounter any numerical issue unlike CCA. Unlike PCA that maximizes the variance in a single data set, PLS maximizes the covariance between two data sets by seeking for linear combinations of the variables from both sets. These linear combinations are called the latent variables. The weight vectors that are used to compute the linear combinations are called the loading vectors. Both latent variables and loading vectors come in pairs (one for each data set).

Visit the mixOmics_ website for more information about this function.

.. _mixOmics: http://perso.math.univ-toulouse.fr/mixomics/methods/spls/

----

Usage
=====

Input File (X)
  a tabular file which provides the data for the principal components analysis. It can contain missing values.

Input File (Y)
  a tabular file which provides the responses (for multi-response models). Missing values (NAs) are allowed.

Number of components
  if the data is complete, this parameter decides the number of components and associated eigenvalues to display from the ``pcasvd`` algorithm. If the data has missing values, this parameter gives the number of components to keep to perform the reconstitution of the data using the NIPALS algorithm.
  
Sparse PLS
  perform the Sparse PLS algorithm with feature selection.

  when selected, you will need to specify **how many variables to keep on each dimension**, this is a comma or space separated list of numbered values. The number of elements to put is the same as what is specified in the **number of components** field. For example, if *number of components* =3, then this field will have (5 10 8).

mode {regression|canonical|invariant|classic}
  type of PLS algorithm to use for the computation, there are four available:
  * regression - this is to model a causal relationship between the two data sets, for instance, PLS will predict Y from X
  * canonical - similar to CCA, this mode is used to model a bi-directional relationship between the two datasets
  * invariant - performs redundancy analysis (the Y matrix is not deflated)
  * classic - classical PLS as proposed in Tenenhaus (1998)

----

Outputs
=======

There are five output files from this tool:

1. Loading Vectors for X (csv format) - list of estimated loadings for the X variables
2. Loading Vectors for Y (csv format) - list of estimated loadings for the Y variables
3. Latent variables for X (csv)       - list of X variates
4. Latent varaibles for Y (csv)       - list of Y variates
5. R data object of the result (used for plotting)
  </help>
</tool>
